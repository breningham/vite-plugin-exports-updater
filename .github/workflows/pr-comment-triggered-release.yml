name: PR Comment Triggered Release

on:
  issue_comment:
    types: [created]

jobs:
  prerelease:
    if: |
      github.event.issue.pull_request &&
      (github.event.comment.body == '/prerelease' || github.event.comment.body == '/release:pr') &&
      github.actor == 'breningham'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Get PR branch
        id: get_pr_branch
        uses: xt0rted/pull-request-comment-branch@v3
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v5
        with:
          ref: ${{ steps.get_pr_branch.outputs.head_ref }}
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Read package name
        id: package_name
        run: echo "name=$(jq -r .name package.json)" >> $GITHUB_OUTPUT

      - name: Create pre-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PR_BRANCH: ${{ steps.get_pr_branch.outputs.head_ref }}
        run: |
          node -e 'import { readFileSync, writeFileSync } from "fs"; const path = ".releaserc.json"; const config = JSON.parse(readFileSync(path)); config.branches = ["main", { name: process.env.PR_BRANCH, prerelease: "pr" }]; writeFileSync(path, JSON.stringify(config, null, 2));'
          pnpm run release
          git checkout -- .releaserc.json

      - name: Comment on Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const packageName = "${{ steps.package_name.outputs.name }}";
            const body = `A pre-release has been published for this PR. You can install it with:\n\n\`sh\npnpm add ${packageName}@pr\n\``;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
